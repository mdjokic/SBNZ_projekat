import ftn.sbnz.banhammer.model.MatchEvent;
import ftn.sbnz.banhammer.model.MatchInfo;
import ftn.sbnz.banhammer.model.Punishment;
import ftn.sbnz.banhammer.model.ThreatLevel;
import ftn.sbnz.banhammer.model.Report;
import ftn.sbnz.banhammer.model.User;
import ftn.sbnz.banhammer.model.MatchHistory;
import java.util.List

rule "Match played with reports but no reports and leaving in match history"
    when
        $match: MatchEvent($info: matchInfo, $info.report != Report.NONE, handled == false)
        $u: User(username == $info.userId)
        $allUserMatches: List(size >= 0) from collect(MatchEvent(this != $match, matchInfo.userId == $info.userId))
        not(exists(MatchEvent(matchInfo.report != Report.NONE || matchInfo.finished == false) from $allUserMatches))
    then
        System.out.println("REPORT - NO REPORT IN MATCH HISTORY");
        $u.setPunishment(Punishment.NONE);
        $match.setHandled(true);
        update($match)
        update($u);
end

rule "Match played with no reports and no leaving"
    when
        $match: MatchEvent($info: matchInfo, $info.report == Report.NONE, handled == false)
        $u: User(username == $info.userId)
    then
        System.out.println("NO REPORT");
        $u.setPunishment(Punishment.NONE);
        $match.setHandled(true);
        update($match)
        update($u);
end