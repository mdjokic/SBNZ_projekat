package sbnz.integracija;
import ftn.sbnz.banhammer.model.match.event.PlayerFriendlyFire;
import ftn.sbnz.banhammer.model.match.event.PlayerFlame;
import ftn.sbnz.banhammer.model.match.event.FriendlyFire;

rule "Two friendly fire and then one player friendly fire"
    when
        $fp: PlayerFriendlyFire($fpId: id, provoked == false, $matchId: matchId)
        not(PlayerFlame(this before[0s, 3s] $fp, matchId == $matchId))
        not(PlayerFriendlyFire(this before[0s, 3s] $fp, matchId == $matchId, id != $fpId))
        $ff1: FriendlyFire($ff1Id: id, this before[0s, 3s] $fp, matchId == $matchId)
        $ff2: FriendlyFire(this before[0s, 3s] $ff1, matchId == $matchId, id != $ff1Id)
    then
        System.out.println("Two friendly fire and then one player friendly fire");
        System.out.println();
        $fp.setProvoked(true);
        update($fp);
end

rule "Two friendly fire and then one player flame"
    when
        $fpl: PlayerFlame($fplId: id, provoked == false, $matchId: matchId)
        not(PlayerFlame(this before[0s, 3s] $fpl, matchId == $matchId, id != $fplId))
        not(PlayerFriendlyFire(this before[0s, 3s] $fpl, matchId == $matchId))
        $ff1: FriendlyFire($ff1Id: id, this before[0s, 3s] $fpl, matchId == $matchId)
        $ff2: FriendlyFire(this before[0s, 3s] $ff1, matchId == $matchId, id != $ff1Id)
    then
        System.out.println("Two friendly fire and then one player flame");
        System.out.println();
        $fpl.setProvoked(true);
        update($fpl);
end


rule "Two friendly fire and then one player flame and one player friendly fire"
    when
        $fp: PlayerFriendlyFire($fpId: id, provoked == false, $matchId: matchId)
        $fpl: PlayerFlame($fplId: id, provoked == false, this before[0s, 3s] $fp, matchId == $matchId)
        not(PlayerFlame(this before[0s, 3s] $fpl, matchId == $matchId, id != $fplId))
        not(PlayerFriendlyFire(this before[0s, 3s] $fpl, matchId == $matchId, id != $fpId))
        $ff1: FriendlyFire($ff1Id: id, this before[0s, 3s] $fpl, matchId == $matchId)
        $ff2: FriendlyFire(this before[0s, 3s] $ff1, matchId == $matchId, id != $ff1Id)
    then
        System.out.println("Two friendly fire and then one player flame and one player friendly fire");
        System.out.println();
        $fp.setProvoked(true);
        $fpl.setProvoked(true);
        update($fp);
        update($fpl);
end

rule "Two friendly fire and then one player friendly fire and one player flame"
    when
        $fpl: PlayerFlame($pfId: id, provoked == false, $matchId: matchId)
        $fp: PlayerFriendlyFire($pflId: id, provoked == false, this before[0s, 3s] $fpl, matchId == $matchId)
        not(PlayerFlame(this before[0s, 3s] $fp, matchId == $matchId, id != $pfId))
        not(PlayerFriendlyFire(this before[0s, 3s] $fp, matchId == $matchId, id != $pflId))
        $ff1: FriendlyFire($ff1Id: id, this before[0s, 3s] $fp, matchId == $matchId)
        $ff2: FriendlyFire(this before[0s, 3s] $ff1, matchId == $matchId, id != $ff1Id)
    then
        System.out.println("Two friendly fire and then one player friendly fire and one player flame");
        System.out.println();
        $fp.setProvoked(true);
        $fpl.setProvoked(true);
        update($fp);
        update($fpl);
end

rule "Two friendly fire and then two player friendly fire"
    when
        $fp2: PlayerFriendlyFire($pf2Id: id, provoked == false, $matchId: matchId)
        $fp1: PlayerFriendlyFire($pf1Id: id, provoked == false, this before[0s, 3s] $fp2, matchId == $matchId, id != $pf2Id)
        not(PlayerFlame(this before[0s, 3s] $fp1, matchId == $matchId))
        not(PlayerFriendlyFire(this before[0s, 3s] $fp1, matchId == $matchId, id != $pf1Id, id != $pf2Id))
        $ff1: FriendlyFire($ff1Id: id, this before[0s, 3s] $fp1, matchId == $matchId)
        $ff2: FriendlyFire(this before[0s, 3s] $ff1, matchId == $matchId, id != $ff1Id)
    then
        System.out.println("Two friendly fire and then two player friendly fire");
        System.out.println();
        $fp2.setProvoked(true);
        $fp1.setProvoked(true);
        update($fp2);
        update($fp1);
end

rule "Two friendly fire and then two player flame"
    when
        $fpl2: PlayerFlame($pf2Id: id, provoked == false, $matchId: matchId)
        $fpl1: PlayerFlame($pf1Id: id, provoked == false, this before[0s, 3s] $fpl2, matchId == $matchId, id != $pf2Id)
        not(PlayerFlame(this before[0s, 3s] $fpl1, matchId == $matchId, id != $pf1Id, id != $pf2Id))
        not(PlayerFriendlyFire(this before[0s, 3s] $fpl1, matchId == $matchId))
        $ff1: FriendlyFire($ff1Id: id, this before[0s, 3s] $fpl1, matchId == $matchId)
        $ff2: FriendlyFire(this before[0s, 3s] $ff1, matchId == $matchId, id != $ff1Id)
    then
        System.out.println("Two friendly fire and then two player flame");
        System.out.println();
        $fpl2.setProvoked(true);
        $fpl1.setProvoked(true);
        update($fpl2);
        update($fpl1);
end