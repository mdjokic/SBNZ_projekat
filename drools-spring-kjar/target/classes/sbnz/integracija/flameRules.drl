import ftn.sbnz.banhammer.model.MatchEvent;
import ftn.sbnz.banhammer.model.MatchInfo;
import ftn.sbnz.banhammer.model.Punishment;
import ftn.sbnz.banhammer.model.ThreatLevel;
import ftn.sbnz.banhammer.model.Report;
import ftn.sbnz.banhammer.model.User;
import ftn.sbnz.banhammer.model.ChatLogAnalyzer;
import ftn.sbnz.banhammer.model.MatchHistory;
import java.util.List

declare AnalyzeChatLog
    forWhat: String
    username: String
end

declare PunishPlayer
    forWhat: String
    username: String
end

declare IncreaseThreat
    username: String
end

rule "Match played with player reported for flaming and any report in match history"
salience 10
    when
        $match: MatchEvent($info: matchInfo, $info.report == Report.OFFENSIVE_LANGUAGE, handled == false)
        $u: User(username == $info.userId)
        $allUserMatches: List(size > 0) from collect(MatchEvent(this != $match, matchInfo.userId == $info.userId))
        exists(MatchEvent(matchInfo.report != Report.NONE) from $allUserMatches)
    then
        System.out.println("FLAME REPORT - REPORT IN MATCH HISTORY");
        System.out.println("PERFORMING ANALYSIS FOR FLAME FOR " + $u.username);
        $match.setHandled(true);
        update($match)
        insert(new AnalyzeChatLog("flame", $u.username));
end

rule "Chat log analysis for flame true"
    when
        $a: AnalyzeChatLog(forWhat == "flame", $username: username)
        $c: ChatLogAnalyzer(flame == true)
        $u: User(username == $username)
    then
        System.out.println("ANALYSIS FOR FLAME IS TRUE FOR " + $u.username);
        delete($a);
        delete($c);
        insert(new PunishPlayer("flame", $u.username));
end

rule "Chat log analysis for flame false"
    when
        $a: AnalyzeChatLog(forWhat == "flame", $username: username)
        $c: ChatLogAnalyzer(flame == false)
        $u: User(username == $username)
    then
        System.out.println("ANALYSIS FOR FLAME IS FALSE FOR " + $u.username);
        delete($a);
        delete($c);
        $u.setPunishment(Punishment.NONE);
        update($u);
end

rule "Punish for flame threat none"
    when
        $p: PunishPlayer(forWhat == "flame", $username: username)
        $u: User(threatLevel == ThreatLevel.NONE, username == $username)
    then
        System.out.println("ISSUING WARNING FOR " + $u.username + " FOR FLAME");
        $u.setPunishment(Punishment.WARNING);
        delete($p);
        update($u);
        insert(new IncreaseThreat($u.username));
end

rule "Punish for flame threat low"
    when
        $p: PunishPlayer(forWhat == "flame", $username: username)
        $u: User(threatLevel == ThreatLevel.LOW, username == $username)
    then
        System.out.println("ISSUING 3 DAY CHAT BAN FOR " + $u.username + " FOR FLAME");
        $u.setPunishment(Punishment.CHAT_BAN_3_DAYS);
        delete($p);
        update($u);
        insert(new IncreaseThreat($u.username));
end

rule "Punish for flame threat medium"
    when
        $p: PunishPlayer(forWhat == "flame", $username: username)
        $u: User(threatLevel == ThreatLevel.MEDIUM, username == $username)
    then
        System.out.println("ISSUING 7 DAY CHAT BAN FOR " + $u.username + " FOR FLAME");
        $u.setPunishment(Punishment.CHAT_BAN_7_DAYS);
        delete($p);
        update($u);
        insert(new IncreaseThreat($u.username));
end

rule "Punish for flame threat high"
    when
        $p: PunishPlayer(forWhat == "flame", $username: username)
        $u: User(threatLevel == ThreatLevel.HIGH, username == $username)
    then
        System.out.println("ISSUING PERMANENT SUSPENSION FOR " + $u.username + " FOR FLAME");
        $u.setPunishment(Punishment.PERMANENT_SUSPENSION);
        delete($p);
        update($u);
        insert(new IncreaseThreat($u.username));
end